{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introductory Tutorial\n",
    "\n",
    "<a target=\"_blank\" href=\"https://colab.research.google.com/github/HLasse/TextDescriptives/blob/main/docs/tutorials/introductory_tutorial.ipynb\">\n",
    "  <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/>\n",
    "</a>\n",
    "\n",
    "TextDescriptives lets you quickly and easily calculate a large variety of statistics and metrics from texts. \n",
    "\n",
    "The package includes a number of components that make it easy to only spend time extracting exactly the metrics you care about.\n",
    "\n",
    "This tutorial introduces some of components available in TextDescriptives and how you can use them to quickly analyse a text corpus.\n",
    "For more information on the components, see the [documentation](https://hlasse.github.io/TextDescriptives/)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis\n",
    "In this tutorial we'll use TextDescriptives to get a quick overview of the [SMS Spam Collection Data Set](https://archive.ics.uci.edu/ml/datasets/SMS+Spam+Collection).\n",
    "The dataset contains 5572 SMS messages categorized as ham or spam. \n",
    "\n",
    "To start, let's load a `spacy` pipeline and add some components to it. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "try:\n",
    "    import textdescriptives\n",
    "except:\n",
    "    !pip install \"textdescriptives[tutorials]\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[38;5;4mâ„¹ 'textdescriptives/descriptive_stats' component is required for\n",
      "'textdescriptives.readability'. Adding to pipe.\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<textdescriptives.components.dependency_distance.DependencyDistance at 0x121e8b280>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import spacy\n",
    "import textdescriptives as td\n",
    "nlp = spacy.load(\"en_core_web_sm\")\n",
    "\n",
    "nlp.add_pipe(\"textdescriptives/readability\")\n",
    "nlp.add_pipe(\"textdescriptives/dependency_distance\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From now on, whenever we pass a document through the spacy pipeline (`nlp`), TextDescriptives will add readability and dependency distance metrics to the document.\n",
    "\n",
    "Let's load the data and pass it through the pipeline."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>message</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ham</td>\n",
       "      <td>Go until jurong point, crazy.. Available only ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ham</td>\n",
       "      <td>Ok lar... Joking wif u oni...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>spam</td>\n",
       "      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ham</td>\n",
       "      <td>U dun say so early hor... U c already then say...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ham</td>\n",
       "      <td>Nah I don't think he goes to usf, he lives aro...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  label                                            message\n",
       "0   ham  Go until jurong point, crazy.. Available only ...\n",
       "1   ham                      Ok lar... Joking wif u oni...\n",
       "2  spam  Free entry in 2 a wkly comp to win FA Cup fina...\n",
       "3   ham  U dun say so early hor... U c already then say...\n",
       "4   ham  Nah I don't think he goes to usf, he lives aro..."
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from textdescriptives.utils import load_sms_data\n",
    "\n",
    "df = load_sms_data()\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ham     4825\n",
       "spam     747\n",
       "Name: label, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"label\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "doc = nlp.pipe(df[\"message\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "metrics = td.extract_df(doc, include_text=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# join the metrics to the original dataframe\n",
    "df = df.join(metrics, how=\"left\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That's all we need to do! Let's take a look at the dataframe and the metrics we have calculated"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>label</th>\n",
       "      <th>message</th>\n",
       "      <th>dependency_distance_mean</th>\n",
       "      <th>dependency_distance_std</th>\n",
       "      <th>prop_adjacent_dependency_relation_mean</th>\n",
       "      <th>prop_adjacent_dependency_relation_std</th>\n",
       "      <th>token_length_mean</th>\n",
       "      <th>token_length_median</th>\n",
       "      <th>token_length_std</th>\n",
       "      <th>sentence_length_mean</th>\n",
       "      <th>...</th>\n",
       "      <th>n_characters</th>\n",
       "      <th>n_sentences</th>\n",
       "      <th>flesch_reading_ease</th>\n",
       "      <th>flesch_kincaid_grade</th>\n",
       "      <th>smog</th>\n",
       "      <th>gunning_fog</th>\n",
       "      <th>automated_readability_index</th>\n",
       "      <th>coleman_liau_index</th>\n",
       "      <th>lix</th>\n",
       "      <th>rix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ham</td>\n",
       "      <td>Go until jurong point, crazy.. Available only ...</td>\n",
       "      <td>2.119048</td>\n",
       "      <td>0.639763</td>\n",
       "      <td>0.344877</td>\n",
       "      <td>0.064145</td>\n",
       "      <td>4.150000</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.904600</td>\n",
       "      <td>6.666667</td>\n",
       "      <td>...</td>\n",
       "      <td>92</td>\n",
       "      <td>3</td>\n",
       "      <td>94.318333</td>\n",
       "      <td>1.760000</td>\n",
       "      <td>3.1291</td>\n",
       "      <td>2.666667</td>\n",
       "      <td>1.449833</td>\n",
       "      <td>4.162000</td>\n",
       "      <td>11.666667</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ham</td>\n",
       "      <td>Ok lar... Joking wif u oni...</td>\n",
       "      <td>1.233333</td>\n",
       "      <td>0.566667</td>\n",
       "      <td>0.533333</td>\n",
       "      <td>0.133333</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.527525</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>105.090000</td>\n",
       "      <td>-0.653333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.200000</td>\n",
       "      <td>-5.800000</td>\n",
       "      <td>-8.026667</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>spam</td>\n",
       "      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n",
       "      <td>2.976891</td>\n",
       "      <td>0.094538</td>\n",
       "      <td>0.485294</td>\n",
       "      <td>0.014706</td>\n",
       "      <td>4.392857</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.298693</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>128</td>\n",
       "      <td>2</td>\n",
       "      <td>92.917857</td>\n",
       "      <td>3.777143</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>6.260357</td>\n",
       "      <td>7.915714</td>\n",
       "      <td>28.285714</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ham</td>\n",
       "      <td>U dun say so early hor... U c already then say...</td>\n",
       "      <td>1.452381</td>\n",
       "      <td>0.119048</td>\n",
       "      <td>0.535714</td>\n",
       "      <td>0.035714</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.758098</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>2</td>\n",
       "      <td>116.652500</td>\n",
       "      <td>-1.645000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>-4.550000</td>\n",
       "      <td>-3.541818</td>\n",
       "      <td>14.590909</td>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ham</td>\n",
       "      <td>Nah I don't think he goes to usf, he lives aro...</td>\n",
       "      <td>2.066667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.461538</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.598816</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>49</td>\n",
       "      <td>1</td>\n",
       "      <td>109.040000</td>\n",
       "      <td>1.280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.200000</td>\n",
       "      <td>1.373846</td>\n",
       "      <td>2.276923</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  label                                            message  \\\n",
       "0   ham  Go until jurong point, crazy.. Available only ...   \n",
       "1   ham                      Ok lar... Joking wif u oni...   \n",
       "2  spam  Free entry in 2 a wkly comp to win FA Cup fina...   \n",
       "3   ham  U dun say so early hor... U c already then say...   \n",
       "4   ham  Nah I don't think he goes to usf, he lives aro...   \n",
       "\n",
       "   dependency_distance_mean  dependency_distance_std  \\\n",
       "0                  2.119048                 0.639763   \n",
       "1                  1.233333                 0.566667   \n",
       "2                  2.976891                 0.094538   \n",
       "3                  1.452381                 0.119048   \n",
       "4                  2.066667                 0.000000   \n",
       "\n",
       "   prop_adjacent_dependency_relation_mean  \\\n",
       "0                                0.344877   \n",
       "1                                0.533333   \n",
       "2                                0.485294   \n",
       "3                                0.535714   \n",
       "4                                0.400000   \n",
       "\n",
       "   prop_adjacent_dependency_relation_std  token_length_mean  \\\n",
       "0                               0.064145           4.150000   \n",
       "1                               0.133333           3.000000   \n",
       "2                               0.014706           4.392857   \n",
       "3                               0.035714           3.000000   \n",
       "4                               0.000000           3.461538   \n",
       "\n",
       "   token_length_median  token_length_std  sentence_length_mean  ...  \\\n",
       "0                  5.0          1.904600              6.666667  ...   \n",
       "1                  3.0          1.527525              3.000000  ...   \n",
       "2                  4.0          3.298693             14.000000  ...   \n",
       "3                  3.0          1.758098              5.500000  ...   \n",
       "4                  3.0          1.598816             13.000000  ...   \n",
       "\n",
       "   n_characters  n_sentences  flesch_reading_ease  flesch_kincaid_grade  \\\n",
       "0            92            3            94.318333              1.760000   \n",
       "1            24            2           105.090000             -0.653333   \n",
       "2           128            2            92.917857              3.777143   \n",
       "3            39            2           116.652500             -1.645000   \n",
       "4            49            1           109.040000              1.280000   \n",
       "\n",
       "     smog  gunning_fog  automated_readability_index  coleman_liau_index  \\\n",
       "0  3.1291     2.666667                     1.449833            4.162000   \n",
       "1     NaN     1.200000                    -5.800000           -8.026667   \n",
       "2     NaN     5.600000                     6.260357            7.915714   \n",
       "3     NaN     2.200000                    -4.550000           -3.541818   \n",
       "4     NaN     5.200000                     1.373846            2.276923   \n",
       "\n",
       "         lix       rix  \n",
       "0  11.666667  0.333333  \n",
       "1   3.000000  0.000000  \n",
       "2  28.285714  2.000000  \n",
       "3  14.590909  0.500000  \n",
       "4  13.000000  0.000000  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's do some quick exploratory data analysis to get a sense of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot: xlabel='label', ylabel='lix'>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "sns.boxplot(x=\"label\", y=\"lix\", data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's run a quick test to see if any of our metrics correlate strongly with the label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "token_length_std              -0.409000\n",
       "n_characters                  -0.408325\n",
       "n_unique_tokens               -0.363069\n",
       "coleman_liau_index            -0.317732\n",
       "dependency_distance_std       -0.313342\n",
       "automated_readability_index   -0.310453\n",
       "n_tokens                      -0.298789\n",
       "token_length_mean             -0.294734\n",
       "sentence_length_std           -0.293698\n",
       "rix                           -0.284293\n",
       "dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# encode the label as a boolean\n",
    "df[\"is_ham\"] = df[\"label\"] == \"ham\"\n",
    "# compute the correlation between all metrics and the label\n",
    "metrics_correlations = metrics.corrwith(df[\"is_ham\"]).sort_values(key=abs, ascending=False)\n",
    "metrics_correlations[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That's some pretty high correlations - let's plot a few of them! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot a kde plot for the top 3 metrics\n",
    "import matplotlib.pyplot as plt\n",
    "fig, ax = plt.subplots(1,3, figsize=(10, 5), sharey=False)\n",
    "for i, metric in enumerate(metrics_correlations.index[:3]):\n",
    "    sns.kdeplot(df, x=metric, hue=\"label\", ax=ax[i])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Cool! We've now done a quick analysis of the SMS dataset and found the distributions of e.g. the standard deviation of token length, the number of characters, and the number of unique tokens to be distributed differently between the actual SMS's and spam. \n",
    "\n",
    "Next steps could be continue the exploratory data analysis or to build a simple classifier using the extracted metrics."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "textdescriptives",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.15"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "31387647799921bb85032eec7bb02e281325ae7f8ffa6f9cd7cdead815b36c88"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
