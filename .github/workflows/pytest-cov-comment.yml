name: CI Pytest
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [macos-latest, windows-latest, ubuntu-latest]
            python-version: ['3.9', '3.8', '3.7']
            exclude:
              - os: ubuntu-latest
                python-version: '3.9'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt
    - name: Run and write pytest
      run: |
        pytest --cov=textdescriptives --cov-report term-missing

  pytest-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt
    - name: Run and write pytest
      run: |
        set -o pipefail
        pytest --cov=textdescriptives --cov-report term-missing | tee pytest-coverage.txt
    - name: Pytest coverage comment
      id: coverage-comment
      uses: MishaKav/pytest-coverage-comment@v1.1.33
      with:
        pytest-coverage-path: ./pytest-coverage.txt

    - name: Check the output coverage
      if: ${{ github.event_name == 'push' }}
      run: |
        echo "Coverage Report - ${{ steps.coverage-comment.outputs.coverage }}"
        echo "Coverage Color - ${{ steps.coverage-comment.outputs.color }}"
    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.3.0
      with:
        auth: ${{ secrets.PYTEST_COVERAGE }}
        gistID: 24ee79064ca9d49616cbc410da65cee2
        filename: badge-textdescriptives-pytest-coverage.json
        label: Coverage
        message: ${{ steps.coverage-comment.outputs.coverage }}
        color: ${{ steps.coverage-comment.outputs.color }}
        namedLogo: python
